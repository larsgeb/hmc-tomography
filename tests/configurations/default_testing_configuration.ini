[domain]
nt = 3000;                              int
nx_inner = 40;                        int
nz_inner = 60;                         int
nx_inner_boundary = 0;                 int, defines inner limits in which to compute kernels. Limits wavefield storage and computation burden.
nz_inner_boundary = 10;                 int, defines inner limits in which to compute kernels. Limits wavefield storage and computation burden.
dx = 1.249;                             float
dz = 1.249;                             float
dt = 0.00025;                           float

[boundary]
np_boundary = 25;      int
np_factor = 0.015;      float 

[medium]
scalar_rho = 1500.0;    float
scalar_vp = 2000.0;     float
scalar_vs = 800.0;      float

[sources]
peak_frequency = 50.0;                  float
n_sources = 4;                          int
n_shots = 1;                            int
source_timeshift = 0.005;
delay_cycles_per_shot = 9 // over f
moment_angles = {47, 134, 165, 73} ;
ix_sources = {5, 15, 25, 35};
iz_sources = {5, 5, 5, 5};
which_source_to_fire_in_which_shot = {{0, 1, 2, 3}};

[receivers]
nr = 9; !!
ix_receivers = {4, 8, 12, 16, 20, 24, 28, 32, 36}; !!
iz_receivers = {55, 55, 55, 55, 55, 55, 55, 55, 55}

[inversion]
snapshot_interval = 10; int, snapshots of forward wavefield to store.

[basis]
npx = 1
npz = 1

[output]
observed_data_folder = ./tests
stf_folder = ./tests